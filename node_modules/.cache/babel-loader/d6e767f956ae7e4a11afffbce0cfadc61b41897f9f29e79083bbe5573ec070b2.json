{"ast":null,"code":"var _jsxFileName = \"/home/wango/codechallenge2/src/YourBotArmy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourBotArmy = ({\n  bots\n}) => {\n  _s();\n  const [army, setArmy] = useState([]);\n  const enlistBot = bot => {\n    // Check if the bot is already enlisted\n    if (!army.some(enlistedBot => enlistedBot.id === bot.id)) {\n      // Perform the POST request to enlist the bot\n      fetch('http://localhost:3000/enlist', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bot)\n      }).then(response => response.json()).then(data => {\n        // Update the state with the enlisted bot\n        setArmy(prevArmy => [...prevArmy, data]);\n      }).catch(error => console.error('Error enlisting bot:', error));\n    }\n  };\n  const dischargeBot = bot => {\n    // Perform the DELETE request to discharge the bot\n    fetch(`http://localhost:3000/discharge/${bot.id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      // Update the state by removing the discharged bot\n      setArmy(prevArmy => prevArmy.filter(enlistedBot => enlistedBot.id !== bot.id));\n    }).catch(error => console.error('Error discharging bot:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), army.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bots enlisted yet. Enlist some now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: army.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name:\", bot.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Health:\", bot.health]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Damage:\", bot.damage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Armor:\", bot.armor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Level:\", bot.bot_class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dischargeBot(bot),\n          children: \"Discharge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enlist a Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name:\", bot.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Health:\", bot.health]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Damage:\", bot.damage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Armor:\", bot.armor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Level:\", bot.bot_class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => enlistBot(bot),\n          children: \"Enlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(YourBotArmy, \"QLDV7L1XtdT2me87iEwv71oMomY=\");\n_c = YourBotArmy;\nexport default YourBotArmy;\nvar _c;\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YourBotArmy","bots","_s","army","setArmy","enlistBot","bot","some","enlistedBot","id","fetch","method","headers","body","JSON","stringify","then","response","json","data","prevArmy","catch","error","console","dischargeBot","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","health","damage","armor","bot_class","onClick","_c","$RefreshReg$"],"sources":["/home/wango/codechallenge2/src/YourBotArmy.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst YourBotArmy = ({ bots }) => {\n  const [army, setArmy] = useState([]);\n\n  const enlistBot = (bot) => {\n    // Check if the bot is already enlisted\n    if (!army.some((enlistedBot) => enlistedBot.id === bot.id)) {\n      // Perform the POST request to enlist the bot\n      fetch('http://localhost:3000/enlist', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(bot),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          // Update the state with the enlisted bot\n          setArmy((prevArmy) => [...prevArmy, data]);\n        })\n        .catch((error) => console.error('Error enlisting bot:', error));\n    }\n  };\n\n  const dischargeBot = (bot) => {\n    // Perform the DELETE request to discharge the bot\n    fetch(`http://localhost:3000/discharge/${bot.id}`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        // Update the state by removing the discharged bot\n        setArmy((prevArmy) => prevArmy.filter((enlistedBot) => enlistedBot.id !== bot.id));\n      })\n      .catch((error) => console.error('Error discharging bot:', error));\n  };\n\n  return (\n    <div>\n      <h1>Your Bot Army</h1>\n      {army.length === 0 ? (\n        <p>No bots enlisted yet. Enlist some now!</p>\n      ) : (\n        <ul>\n          {army.map((bot) => (\n            <li key={bot.id}>\n               <h3>Name:{bot.name}</h3>\n              <p>Health:{bot.health}</p>\n              <p>Damage:{bot.damage}</p>\n              <p>Armor:{bot.armor}</p>\n              <p>Level:{bot.bot_class}</p>\n              <button onClick={() => dischargeBot(bot)}>Discharge</button>\n            </li>\n          ))}\n        </ul>\n      )}\n      <h2>Enlist a Bot</h2>\n      <ul>\n        {bots.map((bot) => (\n          <li key={bot.id}>\n              <h3>Name:{bot.name}</h3>\n              <p>Health:{bot.health}</p>\n              <p>Damage:{bot.damage}</p>\n              <p>Armor:{bot.armor}</p>\n            <p>Level:{bot.bot_class}</p>\n            <button onClick={() => enlistBot(bot)}>Enlist</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default YourBotArmy;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}